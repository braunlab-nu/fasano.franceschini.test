[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Connor Puritz,Elan Ness-Cohn Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Connor Puritz. Author, maintainer. Elan Ness-Cohn. Author. Rosemary Braun. Contributor, thesis advisor. Luca Weihs. Copyright holder.            Copyright holder author 'RangeTree' class.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Puritz C, Ness-Cohn E (2022). fasano.franceschini.test: Fasano-Franceschini Test: Multidimensional Kolmogorov-Smirnov Two-Sample Test. R package version 2.0.0.","code":"@Manual{,   title = {fasano.franceschini.test: Fasano-Franceschini Test: A Multidimensional Kolmogorov-Smirnov Two-Sample Test},   author = {Connor Puritz and Elan Ness-Cohn},   year = {2022},   note = {R package version 2.0.0}, }"},{"path":"/index.html","id":"fasano-franceschini-test","dir":"","previous_headings":"","what":"Fasano-Franceschini Test: A Multidimensional Kolmogorov-Smirnov Two-Sample Test","title":"Fasano-Franceschini Test: A Multidimensional Kolmogorov-Smirnov Two-Sample Test","text":"fasano.franceschini.test package R implementation multidimensional Kolmogorov-Smirnov two-sample test defined Fasano Franceschini (1987).","code":"Fasano, G. & Franceschini, A. (1987). A multidimensional version of the Kolmogorov-Smirnov test. Monthly Notices of the Royal Astronomical Society, 225:155-170. doi: 10.1093/mnras/225.1.155."},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fasano-Franceschini Test: A Multidimensional Kolmogorov-Smirnov Two-Sample Test","text":"can install released version fasano.franceschini.test package CRAN : development version fasano.franceschini.test package GitHub :","code":"install.packages(\"fasano.franceschini.test\") # install.packages(\"devtools\") devtools::install_github(\"nesscoder/fasano.franceschini.test\")"},{"path":[]},{"path":"/index.html","id":"underlying-distributions-are-the-same","dir":"","previous_headings":"Examples","what":"Underlying distributions are the same","title":"Fasano-Franceschini Test: A Multidimensional Kolmogorov-Smirnov Two-Sample Test","text":"","code":"library(fasano.franceschini.test)  # set seed for reproducibility set.seed(0)  # create 2D samples from the same underlying distribution S1 <- data.frame(x = rnorm(n = 50, mean = 0, sd = 1),                  y = rnorm(n = 50, mean = 0, sd = 3)) S2 <- data.frame(x = rnorm(n = 100, mean = 0, sd = 1),                  y = rnorm(n = 100, mean = 0, sd = 3))  fasano.franceschini.test(S1, S2, seed = 0) #>  #>  Fasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 0.9815, p-value = 0.6535 #> 95 percent confidence interval: #>  0.5522616 0.7454075 #> sample estimates: #>   D1   D2  #> 0.18 0.16"},{"path":"/index.html","id":"underlying-distributions-are-different","dir":"","previous_headings":"Examples","what":"Underlying distributions are different","title":"Fasano-Franceschini Test: A Multidimensional Kolmogorov-Smirnov Two-Sample Test","text":"","code":"# set seed for reproducibility set.seed(1)  # create 3D samples from different underlying distributions S1 <- cbind(rgamma(n = 43, shape = 2),             rpois(n = 43, lambda = 5),             rpois(n = 43, lambda = 3.5)) S2 <- cbind(rgamma(n = 72, shape = 2),             rpois(n = 72, lambda = 5),             rpois(n = 72, lambda = 5))  fasano.franceschini.test(S1, S2, seed = 1) #>  #>  Fasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 1.6943, p-value = 0.0198 #> 95 percent confidence interval: #>  0.002407173 0.069705090 #> sample estimates: #>        D1        D2  #> 0.2845607 0.3685401"},{"path":"/reference/fasano.franceschini.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Fasano-Franceschini Test — fasano.franceschini.test","title":"Fasano-Franceschini Test — fasano.franceschini.test","text":"Performs multidimensional two-sample Kolmogorov-Smirnov test described Fasano Franceschini (1987). test evaluates null hypothesis two ..d. random samples drawn underlying probability distribution. data can dimension, can type (continuous, discrete, mixed).","code":""},{"path":"/reference/fasano.franceschini.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fasano-Franceschini Test — fasano.franceschini.test","text":"","code":"fasano.franceschini.test(   S1,   S2,   nPermute = 100,   threads = 1,   verbose = FALSE,   seed = NULL,   p.conf.level = 0.95 )"},{"path":"/reference/fasano.franceschini.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fasano-Franceschini Test — fasano.franceschini.test","text":"S1 matrix data.frame. S2 matrix data.frame. nPermute nonnegative integer setting number permuted samples generate estimating permutation test p-value. Default 100. set 0, p-value estimated. threads positive integer \"auto\" setting number threads used performing permutation test. set \"auto\", number threads determined RcppParallel::defaultNumThreads(). Default 1. verbose boolean indicating whether display progress bar. Default FALSE. available serial version (threads = 1). seed optional integer seed PRNG used permutation test. Default NULL. available serial version (threads = 1). p.conf.level confidence level confidence interval permutation test p-value.","code":""},{"path":"/reference/fasano.franceschini.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fasano-Franceschini Test — fasano.franceschini.test","text":"list class htest containing following components: statistic value test statistic Z. estimate value sample test statistics D1 D2. p.value permutation test p-value. conf.int binomial confidence interval p-value. method character string indicating type test performed. data.name character string giving names data.","code":""},{"path":"/reference/fasano.franceschini.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fasano-Franceschini Test — fasano.franceschini.test","text":"test statistic computed using efficient range tree implementation time complexity O(n*log(n)^(d-1)), n size largest sample d dimension data. p-value test computed empirically using permutation test. almost always infeasible compute exact permutation test p-value, Monte Carlo approximation made instead. estimate binomially distributed random variable, thus confidence interval can computed. confidence interval obtained using procedure given Clopper Pearson (1934). Since p-values calculated using permutation test, data can dimensionality type (continuous, discrete, mixed). ties data, points counted multiplicity.","code":""},{"path":"/reference/fasano.franceschini.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fasano-Franceschini Test — fasano.franceschini.test","text":"Fasano, G. & Franceschini, . (1987). multidimensional version Kolmogorov-Smirnov test. Monthly Notices Royal Astronomical Society, 225:155-170. doi:10.1093/mnras/225.1.155 . Clopper, C. J. & Pearson, E. S. (1934). use confidence fiducial limits illustrated case binomial. Biometrika, 26, 404–413. doi:10.2307/2331986 .","code":""},{"path":"/reference/fasano.franceschini.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fasano-Franceschini Test — fasano.franceschini.test","text":"","code":"set.seed(0)  # create 2-D samples using data frames S1 <- data.frame(x = rnorm(n = 50, mean = 1, sd = 2),                  y = rnorm(n = 50, mean = 3, sd = 1)) S2 <- data.frame(x = rnorm(n = 150, mean = 1, sd = 2),                  y = rnorm(n = 150, mean = 3, sd = 1))  # perform test (serial version) fasano.franceschini.test(S1, S2) #>  #> \tFasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 0.87773, p-value = 0.8515 #> 95 percent confidence interval: #>  0.7669031 0.9144277 #> sample estimates: #>        D1        D2  #> 0.1333333 0.1533333  #>  # perform test with more permutations fasano.franceschini.test(S1, S2, nPermute = 200) #>  #> \tFasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 0.87773, p-value = 0.8159 #> 95 percent confidence interval: #>  0.7553133 0.8669551 #> sample estimates: #>        D1        D2  #> 0.1333333 0.1533333  #>  # set seed for reproducible p-value fasano.franceschini.test(S1, S2, seed = 0) #>  #> \tFasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 0.87773, p-value = 0.8911 #> 95 percent confidence interval: #>  0.8134799 0.9443628 #> sample estimates: #>        D1        D2  #> 0.1333333 0.1533333  #>  # display progress bar fasano.franceschini.test(S1, S2, verbose = TRUE) #>  #> \tFasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 0.87773, p-value = 0.8614 #> 95 percent confidence interval: #>  0.7783773 0.9220964 #> sample estimates: #>        D1        D2  #> 0.1333333 0.1533333  #>  # change confidence level for p-value confidence interval fasano.franceschini.test(S1, S2, p.conf.level = 0.99) #>  #> \tFasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 0.87773, p-value = 0.8416 #> 99 percent confidence interval: #>  0.7274736 0.9221261 #> sample estimates: #>        D1        D2  #> 0.1333333 0.1533333  #>   # perform test (parallel version, 2 threads) if (FALSE) { fasano.franceschini.test(S1, S2, threads = 2)}   # create 3-D mixed samples using matrices S1 <- cbind(rgamma(n = 43, shape = 2),             rpois(n = 43, lambda = 5),             rpois(n = 43, lambda = 3.5)) S2 <- cbind(rgamma(n = 72, shape = 2),             rpois(n = 72, lambda = 5),             rpois(n = 72, lambda = 5))  # perform test fasano.franceschini.test(S1, S2) #>  #> \tFasano-Francheschini Test #>  #> data:  S1 and S2 #> Z = 1.8443, p-value = 0.009901 #> 95 percent confidence interval: #>  0.00025064 0.05393235 #> sample estimates: #>        D1        D2  #> 0.3323643 0.3785530  #>"},{"path":"/news/index.html","id":"fasanofranceschinitest-200","dir":"Changelog","previous_headings":"","what":"fasano.franceschini.test 2.0.0","title":"fasano.franceschini.test 2.0.0","text":"Major overhaul package. internal computations done C++ now rather R. Testing extended two dimensions arbitrary dimensions. Time complexity computing test statistic reduced quadratic quasilinear. ‘cores’ argument renamed ‘threads’. ‘seed’ argument added ensure reproducibility p-value estimation. ‘verbose’ argument added print progress bar permutation test. p-value approximation removed, accurate valid two dimensions. Tie handling procedures changed, seem affect power. confidence interval p-value estimate now returned.","code":""},{"path":"/news/index.html","id":"fasanofranceschinitest-110","dir":"Changelog","previous_headings":"","what":"fasano.franceschini.test 1.1.0","title":"fasano.franceschini.test 1.1.0","text":"CRAN release: 2021-09-02 ‘nBootstrap’ argument deprecated, removed next version package. Use ‘nPermute’ instead ‘nBootstrap’ compute empirical null distribution data.","code":""},{"path":"/news/index.html","id":"fasanofranceschinitest-101","dir":"Changelog","previous_headings":"","what":"fasano.franceschini.test 1.0.1","title":"fasano.franceschini.test 1.0.1","text":"CRAN release: 2021-07-17 efficient quadCount() calculation reducing runtime. Test result now class Htest improved integration packages. Bug fix bootstrapping procedure ensuring p-value bounded 0 1.","code":""},{"path":"/news/index.html","id":"fasanofranceschinitest-100","dir":"Changelog","previous_headings":"","what":"fasano.franceschini.test 1.0.0","title":"fasano.franceschini.test 1.0.0","text":"CRAN release: 2021-06-22 fasano.franceschini.test released wild! comprehensive analysis discussion fasano.franceschini.test, see accompanying paper.","code":""}]
